#!/usr/bin/env node
'use strict';
// This is a proof of concept. The code below is ugly, inefficient and has no tests.

const fs = require('fs');
const yargs = require('yargs');
const {PARCEL_SERIALIZER} = require('../messages/serialization');

async function main(argv) {
    process.stdout.write(await PARCEL_SERIALIZER.serialize(
        fs.readFileSync(process.stdin.fd),
        argv.recipientCert,
        fs.readFileSync(argv.senderCert),
        argv.senderKey,
        argv.signHashAlgo,
        argv.id,
    ));
}

const argv = yargs
    .option('recipient-cert', {
        demandOption: true,
        requiresArg: true,
        description: "The recipient's X.509 certificate (chain), PEM-encoded",
        normalize: true,
    })
    .option('sender-cert', {
        demandOption: true,
        requiresArg: true,
        description: "The sender's X.509 certificate (chain), PEM-encoded",
        normalize: true,
    })
    .option('sender-key', {
        demandOption: true,
        requiresArg: true,
        description: "The sender's X.509 key (PEM-encoded) to sign the message",
        normalize: true,
    })
    .option('sign-hash-algo', {
        requiresArg: true,
        default: 'sha256',
        description: 'The hashing algorithm to use in the signature',
    })
    .option('id', {
        requiresArg: true,
        description: "The message's unique id",
    })
    .strict()
    .help()
    .argv;

(async () => await main(argv))();
