#!/usr/bin/env node
'use strict';
// This is a proof of concept. The code below is ugly, inefficient and has no tests.

const fs = require('fs');
const yargs = require('yargs');
const asn1Utils = require('../_asn1_utils');
const pki = require('../core/pki');
const {getCrypto} = require('pkijs');

async function main(argv) {
    const keyPair = await pki.generateNodeKeyPair('SHA-256');
    const certificate = await pki.createPublicNodeCertificate(keyPair, argv.address);
    fs.writeFileSync(argv.cert_path, asn1Utils.derCertToPem(asn1Utils.serializeAsn1jsValue(certificate)));

    const crypto = getCrypto();
    const privateKeyDerBuffer = Buffer.from(await crypto.exportKey("pkcs8", keyPair.privateKey));
    fs.writeFileSync(
        argv.key_path,
        asn1Utils.derKeyToPkcs8Pem(privateKeyDerBuffer),
    );

    console.log(`Generated certificate with address ${argv.address}`)
}

function configureArgs(builder) {
    builder.normalize(['cert_path', 'key_path']);
}

// noinspection BadExpressionStatementJS
yargs
    .command( // noinspection JSUnresolvedFunction
        '$0 address cert_path key_path',
        'Generate private node cert',
        configureArgs,
        main,
    )
    .strict()
    .help()
    .argv;
